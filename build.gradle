plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.0'
	//To create docker image
	id 'org.springframework.boot' version '2.5.0'
    id 'com.palantir.docker' version '0.26.0'
}

group = 'com.ramn.bms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 17
targetCompatibility = 17

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2022.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'javax.persistence:javax.persistence-api:2.2'
	
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

docker {
  dependsOn 'build'
  name 'demobms'
  tag project.version
  files bootJar
  buildArgs(['JAR_FILE': bootJar.archivePath])
}

//To build docker image
./gradlew dockerBuildImage
